/* eslint-disable max-len */

import { Tags } from '@/tag';

export type AiAutoGeneratedField =
  'title' |
  'caption' |
  'tags' |
  'semantic'

export const AI_AUTO_GENERATED_FIELDS_ALL: AiAutoGeneratedField[] = [
  'title',
  'caption',
  'tags',
  'semantic',
];

export const AI_AUTO_GENERATED_FIELDS_DEFAULT: AiAutoGeneratedField[] = [
  'title',
  'tags',
  'semantic',
];

export const parseAiAutoGeneratedFieldsString = (
  text = AI_AUTO_GENERATED_FIELDS_DEFAULT.join(','),
): AiAutoGeneratedField[] => {
  const textFormatted = text.trim().toLocaleLowerCase();
  if (textFormatted === 'none') {
    return [];
  } else if (textFormatted === 'all') {
    return AI_AUTO_GENERATED_FIELDS_ALL;
  } else {
    const fields = textFormatted
      .toLocaleLowerCase()
      .split(',')
      .map(field => field.trim())
      .filter(field => AI_AUTO_GENERATED_FIELDS_ALL
        .includes(field as AiAutoGeneratedField));
    return fields as AiAutoGeneratedField[];
  }
};

export const getAiTextFieldsToGenerate = (
  textFieldsToGenerate: AiAutoGeneratedField[],
  excludeTitle?: boolean,
  excludeCaption?: boolean,
  excludeTags?: boolean,
  excludeSemantic?: boolean,
): AiAutoGeneratedField[] => {
  return textFieldsToGenerate.filter(field =>
    !(excludeTitle && field === 'title') &&
    !(excludeCaption && field === 'caption') &&
    !(excludeTags && field === 'tags') &&
    !(excludeSemantic && field === 'semantic'),
  );
};

export type AiImageQuery =
  'title' |
  'caption' |
  'title-and-caption' |
  'tags' |
  'description-small' |
  'description' |
  'description-large' |
  'description-semantic';


export const getAiImageQuery = (
  query: AiImageQuery,
  existingTags: Tags = [],
  existingTitle?: string,
): string => {
  switch (query) {  
    case 'title': return '请用中文为这张图片写一个有吸引力的标题，不超过 3 个词。';
    case 'caption': return existingTitle
      ? `请用中文为这张图片写一个精炼的配文，不超过 6 个词且不使用标点符号，需与现有标题相得益彰："${existingTitle}"`
      : '请用中文为这张图片写一个精炼的配文，不超过 6 个词且不使用标点符号。';
    case 'title-and-caption': return '请用中文为这张图片写一个有吸引力的标题和一个精炼的配文，总计不超过 8 个词，使用以下格式输出 Title: "title" Caption: "caption"';
    case 'tags':
      const tagQuery = '请用 1–2 个以英文逗号分隔的独特中文关键词描述这张图片，不要使用形容词或副词。避免使用诸如“自然”“旅行”“建筑”“天空”等泛泛词语。使用对图像高度具体且不重复的名词。';
      const tags = existingTags.map(({ tag }) => tag).join(', ');
      return tags
        ? `${tagQuery}可以考虑使用以下已有标签，但仅在确实相关时采用：${tags}。`
        : tagQuery;
    case 'description-small': return '请用中文简洁描述这张图片，不要以“这张图片展示了”或“这是一张……的照片”等开头。';
    case 'description': return '请用中文描述这张图片。';
    case 'description-large': return '请用中文详细描述这张图片。';
    case 'description-semantic': return '请列出这张图片中的最多 5 个事物或要素，不加解释，使用英文逗号分隔。';
  }
};

export const parseTitleAndCaption = (text: string) => {
  const matches = text.includes('Title')
    ? text.match(/^[`'"]*Title: ["']*(.*?)["']*[ ]*Caption: ["']*(.*?)\.*["']*[`'"]*$/)
    : text.match(/^(.*?): (.*?)$/);

  return {
    title: matches?.[1] ?? '',
    caption: matches?.[2] ?? '',
  };
};

export const cleanUpAiTextResponse = (text: string) =>
  text
    .replaceAll('\n', ' ')
    .replaceAll('"', '')
    .replace(/\.$/, '');
